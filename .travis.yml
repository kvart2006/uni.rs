language: rust
rust:
    - nightly

sudo: true

env:
    - test=NO cargo_conf="--release --target=i686-unknown-uni.json" backend=xen
    - test=NO cargo_conf="--target=i686-unknown-uni.json" backend=xen
    - test=NO cargo_conf="--release --target=x86_64-unknown-uni.json" backend=xen
    - test=NO cargo_conf="--target=x86_64-unknown-uni.json" backend=xen
    - test=YES

os:
    - linux

before_install:
    npm install --save-dev travis-after-all

script:
    - if [[ "$test" == "NO" ]]; then cargo build --features="$backend" --verbose --example hello $cargo_conf; fi
    - if [[ "$test" == "NO" ]]; then cargo build --features="$backend" --verbose --example thread $cargo_conf; fi
    - if [[ "$test" == "NO" ]]; then cargo build --features="$backend" --verbose --example queue $cargo_conf; fi
    - if [[ "$test" == "NO" ]]; then cargo build --features="$backend" --verbose --example echo $cargo_conf; fi
    - if [[ "$test" == "NO" ]]; then cargo build --features="$backend" --verbose --example store $cargo_conf; fi
    - if [[ "$test" == "NO" ]]; then cargo build --features="$backend net" --verbose --example udp-echo $cargo_conf; fi

    - if [[ "$test" == "YES" ]]; then cargo test --features test --verbose --manifest-path crates/heap/Cargo.toml; fi
    - if [[ "$test" == "YES" ]]; then cargo test --features test --verbose --manifest-path crates/intrusive/Cargo.toml; fi

after_success:
    - |
        declare exitCode;
        $(npm bin)/travis-after-all
        exitCode=$?
        [ $exitCode -eq 0 ] &&
        [ $TRAVIS_BRANCH = master ] &&
        [ $TRAVIS_PULL_REQUEST = false ] &&
        cargo doc --features "xen virtio net" &&
        echo "<meta http-equiv=refresh content=0;url=uni/index.html>" > target/doc/index.html &&
        sudo pip install ghp-import &&
        ghp-import -n target/doc &&
        git push -fq https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git gh-pages
